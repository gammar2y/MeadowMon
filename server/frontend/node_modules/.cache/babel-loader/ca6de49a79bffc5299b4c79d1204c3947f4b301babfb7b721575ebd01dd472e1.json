{"ast":null,"code":"const backendUrl=process.env.REACT_APP_BACKEND_URL;export const fetchData=async()=>{try{const response=await fetch(\"\".concat(backendUrl,\"/api/some-endpoint\"));if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();return data;}catch(error){console.error('Fetch data failed:',error);throw error;}};","map":{"version":3,"names":["backendUrl","process","env","REACT_APP_BACKEND_URL","fetchData","response","fetch","concat","ok","Error","data","json","error","console"],"sources":["C:/Users/acrew/OneDrive/Desktop/MeadowMon/server/frontend/src/api/apiService.js"],"sourcesContent":["const backendUrl = process.env.REACT_APP_BACKEND_URL;\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const response = await fetch(`${backendUrl}/api/some-endpoint`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Fetch data failed:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,KAAM,CAAAA,UAAU,CAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,CAEpD,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIP,UAAU,sBAAoB,CAAC,CAC/D,GAAI,CAACK,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}